{"ast":null,"code":"var _jsxFileName = \"/Users/anick_168/esd/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ServiceLogin from \"./Service/ServiceLogin\";\nimport NavBar from \"./Components/NavBar\";\nimport Login from \"./Components/Login\";\nimport Dashboard from \"./Components/dashboard\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(null);\n  const [loggedin, setloggedin] = useState(false);\n  const notificationHandler = (message, type) => {\n    setNotification(message);\n    setNotificationType(type);\n    setTimeout(() => {\n      setNotificationType(null);\n      setNotification(null);\n    }, 3000);\n  };\n  const StartLogin = async credentials => {\n    try {\n      console.log(credentials);\n      const userObject = await ServiceLogin.login(credentials);\n      setUser(userObject);\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(userObject));\n      console.log({\n        localStorage\n      });\n      await setloggedin(true);\n      notificationHandler(`Logged in successfully as ${userObject.firstName}`, \"success\");\n      //setBills([]);\n      console.log(\"Login Success\");\n    } catch (exception) {\n      console.log(\"Login Failed\");\n      notificationHandler(`Log in failed, check username and password entered`, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      title: \"IIIT Bangalore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      startLogin: StartLogin,\n      loggedin: loggedin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"vMhlWyHzOPByNiRFwIexejGd1SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ServiceLogin","NavBar","Login","Dashboard","useState","App","user","setUser","notification","setNotification","notificationType","setNotificationType","loggedin","setloggedin","notificationHandler","message","type","setTimeout","StartLogin","credentials","console","log","userObject","login","window","localStorage","setItem","JSON","stringify","firstName","exception"],"sources":["/Users/anick_168/esd/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ServiceLogin from \"./Service/ServiceLogin\";\nimport NavBar from \"./Components/NavBar\";\nimport Login from \"./Components/Login\";\nimport Dashboard from \"./Components/dashboard\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(null);\n  const [loggedin, setloggedin] = useState(false);\n\n  const notificationHandler = (message, type) => {\n    setNotification(message);\n    setNotificationType(type);\n\n    setTimeout(() => {\n      setNotificationType(null);\n      setNotification(null);\n    }, 3000);\n  };\n\n  const StartLogin = async (credentials) => {\n    try {\n      console.log(credentials)\n      const userObject = await ServiceLogin.login(credentials);\n      setUser(userObject);\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(userObject));\n      console.log({localStorage})\n      await setloggedin(true);\n      notificationHandler(\n        `Logged in successfully as ${userObject.firstName}`,\n        \"success\"\n      );\n      //setBills([]);\n      console.log(\"Login Success\")\n    } catch (exception) {\n      console.log(\"Login Failed\")\n      notificationHandler(\n        `Log in failed, check username and password entered`,\n        \"error\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <NavBar title=\"IIIT Bangalore\" />\n      <Login startLogin={StartLogin}\n        loggedin = {loggedin}\n      />\n      <Dashboard />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMU,mBAAmB,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAK;IAC7CP,eAAe,CAACM,OAAO,CAAC;IACxBJ,mBAAmB,CAACK,IAAI,CAAC;IAEzBC,UAAU,CAAC,MAAM;MACfN,mBAAmB,CAAC,IAAI,CAAC;MACzBF,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMS,UAAU,GAAG,MAAOC,WAAW,IAAK;IACxC,IAAI;MACFC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;MACxB,MAAMG,UAAU,GAAG,MAAMtB,YAAY,CAACuB,KAAK,CAACJ,WAAW,CAAC;MACxDZ,OAAO,CAACe,UAAU,CAAC;MACnBE,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU,CAAC,CAAC;MACvEF,OAAO,CAACC,GAAG,CAAC;QAACI;MAAY,CAAC,CAAC;MAC3B,MAAMZ,WAAW,CAAC,IAAI,CAAC;MACvBC,mBAAmB,CAChB,6BAA4BQ,UAAU,CAACO,SAAU,EAAC,EACnD,SAAS,CACV;MACD;MACAT,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOS,SAAS,EAAE;MAClBV,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BP,mBAAmB,CAChB,oDAAmD,EACpD,OAAO,CACR;IACH;EACF,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,KAAK,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eACjC,QAAC,KAAK;MAAC,UAAU,EAAEI,UAAW;MAC5B,QAAQ,EAAIN;IAAS;MAAA;MAAA;MAAA;IAAA,QACrB,eACF,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACZ;AAEP;AAAC,GAhDQP,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}